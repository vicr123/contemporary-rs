name: Build on Windows
on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, windows-11-arm ]
    runs-on: ${{ matrix.os }}
    env:
      ARCH: "${{ endsWith(matrix.os, 'arm') && 'aarch64' || 'x86_64' }}"
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        if: matrix.os == 'windows-11-arm'
        run: |
          Invoke-WebRequest https://win.rustup.rs/aarch64 -OutFile rustup.exe
          .\rustup.exe default stable
          $CargoLocation = .\rustup.exe which cargo
          Add-Content -Path "$env:GITHUB_PATH" -Value ([System.IO.Path]::GetDirectoryName($CargoLocation))
      - uses: Swatinem/rust-cache@v2
      - uses: r7kamura/rust-problem-matchers@v1
      - name: Build
        run: cargo build --verbose --release
#      - name: Bundle
#        run: cargo run --package cargo-cntp-bundle --bin cargo-cntp-bundle
#        working-directory: playground
#      - name: Deploy
#        run: cargo run --package cargo-cntp-deploy --bin cargo-cntp-deploy -- --output-file "$HOME/Contemporary_Playground-$ARCH.AppImage"
#        working-directory: playground
      - uses: actions/upload-artifact@v4
        with:
          name: contemporary-playground-windows-${{ env.ARCH }}
          path: "target/release/playground.exe"
