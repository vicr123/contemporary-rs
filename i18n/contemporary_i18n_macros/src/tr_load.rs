use crate::config::I18N_CONFIG;
use proc_macro::TokenStream;
use quote::quote;
use std::env;
use std::path::Path;

pub fn tr_load(body: TokenStream) -> TokenStream {
    let manifest_dir = env::var("CARGO_MANIFEST_DIR").expect("Failed to get CARGO_MANIFEST_DIR");

    let config = &*I18N_CONFIG;
    let catalog_files = config.i18n.catalog_files(Path::new(&manifest_dir));

    let files: Vec<String> = catalog_files
        .iter()
        .enumerate()
        .map(|(_, path)| path.to_str().unwrap().to_string())
        .collect();
    let files_string = files.join(",");

    quote! {
        {
            use contemporary_i18n::{I18nEntry, I18nSource, I18nStringEntry};

            struct AutogeneratedSource;

            impl I18nSource for AutogeneratedSource {
                fn lookup(&self, id: &str) -> Option<I18nEntry> {
                    Some(I18nEntry::Entry(I18nStringEntry {
                        entry: "Looked up string from autogenerated code".to_string(),
                    }))
                }
            }

            println!("tr_load: {}", #files_string);

            AutogeneratedSource {}
        }
    }
    .into()
}
